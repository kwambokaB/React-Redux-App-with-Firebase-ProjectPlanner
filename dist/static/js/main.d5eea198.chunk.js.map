{"version":3,"sources":["components/layout/signedinLinks.js","store/actions/authActions.js","components/layout/signedoutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signIn.js","components/auth/signUp.js","components/projects/createProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","sighOut","getState","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","signedinLinks","signedoutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","Projectlist","projects","projectSummary","Dashboard","_this$props","this","projectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastname","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","history","push","authid","add","objectSpread","authorId","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","projectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5eea198.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedinLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.sighOut}>Log out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n           \r\n           \r\n\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sighOut: ()=> {dispatch(signOut())}\r\n    }\r\n\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedinLinks);","export  const signIn = (credentials)=>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n               \r\n            dispatch({type:'LOGIN_ERROR', err});\r\n        });\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err });\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedinLinks from './signedinLinks'\r\nimport SignedOutLinks from './signedoutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth, profile} = props;\r\n    const links = auth.uid ? <SignedinLinks profile={profile}/> : <SignedOutLinks /> ;\r\n    return(\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Project Planner </Link>\r\n              {links}\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    \r\nreturn{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n}\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return(\r\n    <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Notification</span>\r\n                <ul className  >\r\n                   {notifications && notifications.map(item =>{\r\n                       return(\r\n                        <li key={item.id}>\r\n                           <span className=\"pink-text\">{item.user}  </span>\r\n                           <span>{item.content}</span>\r\n                           <div className=\"grey-text note-date\">\r\n                               {moment(item.time.toDate()).fromNow()}\r\n                           </div>\r\n                        </li>\r\n                       )\r\n                   })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n            <div className=\"project-summary card z-depth-0\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">\r\n                        {project.title}\r\n                    </span>\r\n                    <p>{project.content}</p>\r\n                    <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\r\n\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './projectSummary';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Projectlist =({projects})=>{\r\n    return(\r\n    <div>\r\n      {projects && projects.map(project => {\r\n        return(\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n        <ProjectSummary project={project} key={project.id}/>\r\n          </Link>\r\n        );\r\n      })} \r\n    </div>\r\n    );       \r\n}\r\nexport default Projectlist;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport Projectlist from '../projects/projectList'\r\nimport {connect } from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component{\r\n    \r\n    render(){\r\n        //console.log(this.props);\r\n\r\n        const {projects, auth, notifications} = this.props;\r\n        if(!auth.uid){\r\n            return <Redirect to=\"./signin\" />\r\n        } \r\n         else\r\n        return(\r\n            <div className=\"container dashboard\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <Projectlist projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications  notifications = {notifications}/>\r\n                    </div>\r\n                     \r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n    const mapStateToProps = (state) =>{\r\n        console.log(state);\r\n        return {\r\n            \r\n            projects:state.firestore.ordered.project,\r\n            auth: state.firebase.auth,\r\n            notifications: state.firestore.ordered.notifications\r\n        }\r\n    }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps), \r\n    firestoreConnect([\r\n        { collection: 'project', orderBy: ['createdAt', 'desc'] },\r\n        {collection: 'notifications', limit: 3, orderBy: ['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nfunction projectDetails(props) {\r\n    //console.log(props);\r\n    const {project, auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project){\r\n        return(\r\n        <div className=\"project-details container\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-actions grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastname}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        );\r\n    }else{\r\n    return (\r\n       <div className=\"container center\">Loading Project</div>\r\n    )\r\n    }\r\n}\r\nconst mapStateToProps =(state, ownProps)=>{\r\n   // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.project;\r\n    const project = projects ?  projects[id] : null\r\n    return{\r\n         project: project,\r\n         auth: state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'project' }\r\n    ])\r\n)(projectDetails)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\nstate={\r\n    email:'',\r\n    password: ''\r\n}\r\n\r\nhandleChange = (e)=>{\r\n    this.setState({\r\n        [e.target.id]:e.target.value\r\n    })\r\n}\r\nhandleSubmit =(e)=>{\r\n    e.preventDefault();\r\nthis.props.signIn(this.state);   \r\n}\r\n    render() {\r\n        const {authError, auth} =this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n               <form onSubmit={this.handleSubmit} className=\"white\">\r\n                   <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"email\">Email</label>\r\n                       <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                       <label htmlFor=\"password\">Password</label>\r\n                       <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                   </div>\r\n                   <div className=\"input-field\">\r\n                   <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ?\r\n                        <p>{authError}</p> : null }\r\n                    </div>\r\n                   </form> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError:state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n     return{\r\n         signIn: (creds) =>{\r\n             dispatch(signIn(creds))\r\n         }\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\n\r\n class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname:'',\r\n        lastname:''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">{ authError ? <p>Login Error</p> : null }</div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError : state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n    signUp: (newUser)=>{dispatch(signUp(newUser))}\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n class CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid){\r\n            return <Redirect to='/signin' />\r\n        }else\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Details</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create Project </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n    auth : state.firebase.auth\r\n    }\r\n}\r\n const mapDispatchToProps = (dispatch)=>{\r\n     return{\r\ncreateProject: (project)=> dispatch(createProject(project))\r\n     }\r\n }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project)=>{\r\n    return(dispatch, getState, { getFirebase, getFirestore })=>{\r\n        //async call to db;\r\n\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authid = getState().firebase.auth.uid;\r\n         firestore.collection('project').add({\r\n             ...project,\r\n             authorFirstName: profile.firstName,\r\n             authorLastName:  profile.lastName,\r\n             authorId: authid,\r\n             createdAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n    }\r\n}","import React, { Component} from 'react';\nimport {BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport projectDetails from './components/projects/projectDetails';\nimport signIn from './components/auth/signIn';\nimport signUp from './components/auth/signUp';\nimport createProject from './components/projects/createProject';\n\nclass App extends Component{\n\n\n  render(){\n    return(\n      <BrowserRouter>\n      <div className=\"App\">\n       <Navbar />\n       <Switch>\n         <Route exact path =\"/\" component={Dashboard} />\n         <Route path =\"/project/:id\" component ={projectDetails}/>\n         <Route path=\"/signin\" component={signIn} />\n         <Route path=\"/signup\" component={signUp} />\n         <Route path=\"/create\" component={createProject} />\n       </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\r\n    authError: null\r\n};\r\n\r\n const authReducer = (state=initState, action) => {\r\n    switch (action.type){\r\n       case 'LOGIN_SUCCESS':\r\n           console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n       case 'LOGIN_ERROR':\r\n        return{\r\n            ...state,\r\n            authError: 'Login Failed!'\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            \r\n        return state\r\n        case 'SIGNUP_SUCCESS' :\r\n            console.log('signup success');\r\n        return {\r\n            ...state,\r\n            authError : null\r\n        }\r\n        \r\n        case 'SIGNUP_FAILED':\r\n            console.log('signup failed');\r\n        return {\r\n            ...state,\r\n            authError : action.err.message\r\n        }   \r\n            \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","const initState = { \r\n    projects:[\r\n      \r\n        {id:'1', title:'find my inner voice', content:'Listening intently to the sound of my breath and the sound of the movement of air in my lungs.'},\r\n        {id:'2', title:'finding my inner truth', content:'Observing the comings and going of my thoughts and emotions'},\r\n        {id:'3', title:'finding dory', content:'watch finding dory because happiness can also be experienced from a screen'} \r\n    ]\r\n\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project success', action.project);\r\n            return state;\r\n            case 'CREATE_PROJECT_ERROR':\r\n                console.log('create project error', action.err);\r\n                return state;\r\n\r\n                default:\r\n                    return state;     \r\n    }\r\n    \r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyD-08iDimabpnYgbTLA-wjQKSZGcx2f-4A\",\r\n    authDomain: \"projectplanner-4b5e6.firebaseapp.com\",\r\n    databaseURL: \"https://projectplanner-4b5e6.firebaseio.com\",\r\n    projectId: \"projectplanner-4b5e6\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"777157767853\",\r\n    appId: \"1:777157767853:web:136c96ac43dcf7be\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reactReduxFirebase(fbConfig, { userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true }),\n        reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n);\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}